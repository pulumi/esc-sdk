// Copyright 2024, Pulumi Corporation.  All rights reserved.
/*
ESC (Environments, Secrets, Config) API

Pulumi ESC allows you to compose and manage hierarchical collections of configuration and secrets and consume them in various ways.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esc_sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApproveChangeRequestRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApproveChangeRequestRequest{}

// ApproveChangeRequestRequest struct for ApproveChangeRequestRequest
type ApproveChangeRequestRequest struct {
	// Which revision to approve
	RevisionNumber int64 `json:"revisionNumber"`
	// Optional note accompanying the approval
	Comment *string `json:"comment,omitempty"`
}

type _ApproveChangeRequestRequest ApproveChangeRequestRequest

// NewApproveChangeRequestRequest instantiates a new ApproveChangeRequestRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproveChangeRequestRequest(revisionNumber int64) *ApproveChangeRequestRequest {
	this := ApproveChangeRequestRequest{}
	this.RevisionNumber = revisionNumber
	return &this
}

// NewApproveChangeRequestRequestWithDefaults instantiates a new ApproveChangeRequestRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproveChangeRequestRequestWithDefaults() *ApproveChangeRequestRequest {
	this := ApproveChangeRequestRequest{}
	return &this
}

// GetRevisionNumber returns the RevisionNumber field value
func (o *ApproveChangeRequestRequest) GetRevisionNumber() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.RevisionNumber
}

// GetRevisionNumberOk returns a tuple with the RevisionNumber field value
// and a boolean to check if the value has been set.
func (o *ApproveChangeRequestRequest) GetRevisionNumberOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevisionNumber, true
}

// SetRevisionNumber sets field value
func (o *ApproveChangeRequestRequest) SetRevisionNumber(v int64) {
	o.RevisionNumber = v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *ApproveChangeRequestRequest) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproveChangeRequestRequest) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *ApproveChangeRequestRequest) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *ApproveChangeRequestRequest) SetComment(v string) {
	o.Comment = &v
}

func (o ApproveChangeRequestRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApproveChangeRequestRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["revisionNumber"] = o.RevisionNumber
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	return toSerialize, nil
}

func (o *ApproveChangeRequestRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"revisionNumber",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApproveChangeRequestRequest := _ApproveChangeRequestRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	// Allow unknown fields to be lenient with API responses that may include extra fields
	err = decoder.Decode(&varApproveChangeRequestRequest)

	if err != nil {
		return err
	}

	*o = ApproveChangeRequestRequest(varApproveChangeRequestRequest)

	return err
}

type NullableApproveChangeRequestRequest struct {
	value *ApproveChangeRequestRequest
	isSet bool
}

func (v NullableApproveChangeRequestRequest) Get() *ApproveChangeRequestRequest {
	return v.value
}

func (v *NullableApproveChangeRequestRequest) Set(val *ApproveChangeRequestRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApproveChangeRequestRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApproveChangeRequestRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproveChangeRequestRequest(val *ApproveChangeRequestRequest) *NullableApproveChangeRequestRequest {
	return &NullableApproveChangeRequestRequest{value: val, isSet: true}
}

func (v NullableApproveChangeRequestRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproveChangeRequestRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


