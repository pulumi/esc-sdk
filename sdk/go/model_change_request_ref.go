// Copyright 2024, Pulumi Corporation.  All rights reserved.
/*
ESC (Environments, Secrets, Config) API

Pulumi ESC allows you to compose and manage hierarchical collections of configuration and secrets and consume them in various ways.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esc_sdk

import (
	"encoding/json"
)

// checks if the ChangeRequestRef type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChangeRequestRef{}

// ChangeRequestRef struct for ChangeRequestRef
type ChangeRequestRef struct {
	ChangeRequestId *string `json:"changeRequestId,omitempty"`
	LatestRevisionNumber *int64 `json:"latestRevisionNumber,omitempty"`
}

// NewChangeRequestRef instantiates a new ChangeRequestRef object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChangeRequestRef() *ChangeRequestRef {
	this := ChangeRequestRef{}
	return &this
}

// NewChangeRequestRefWithDefaults instantiates a new ChangeRequestRef object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChangeRequestRefWithDefaults() *ChangeRequestRef {
	this := ChangeRequestRef{}
	return &this
}

// GetChangeRequestId returns the ChangeRequestId field value if set, zero value otherwise.
func (o *ChangeRequestRef) GetChangeRequestId() string {
	if o == nil || IsNil(o.ChangeRequestId) {
		var ret string
		return ret
	}
	return *o.ChangeRequestId
}

// GetChangeRequestIdOk returns a tuple with the ChangeRequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangeRequestRef) GetChangeRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.ChangeRequestId) {
		return nil, false
	}
	return o.ChangeRequestId, true
}

// HasChangeRequestId returns a boolean if a field has been set.
func (o *ChangeRequestRef) HasChangeRequestId() bool {
	if o != nil && !IsNil(o.ChangeRequestId) {
		return true
	}

	return false
}

// SetChangeRequestId gets a reference to the given string and assigns it to the ChangeRequestId field.
func (o *ChangeRequestRef) SetChangeRequestId(v string) {
	o.ChangeRequestId = &v
}

// GetLatestRevisionNumber returns the LatestRevisionNumber field value if set, zero value otherwise.
func (o *ChangeRequestRef) GetLatestRevisionNumber() int64 {
	if o == nil || IsNil(o.LatestRevisionNumber) {
		var ret int64
		return ret
	}
	return *o.LatestRevisionNumber
}

// GetLatestRevisionNumberOk returns a tuple with the LatestRevisionNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangeRequestRef) GetLatestRevisionNumberOk() (*int64, bool) {
	if o == nil || IsNil(o.LatestRevisionNumber) {
		return nil, false
	}
	return o.LatestRevisionNumber, true
}

// HasLatestRevisionNumber returns a boolean if a field has been set.
func (o *ChangeRequestRef) HasLatestRevisionNumber() bool {
	if o != nil && !IsNil(o.LatestRevisionNumber) {
		return true
	}

	return false
}

// SetLatestRevisionNumber gets a reference to the given int64 and assigns it to the LatestRevisionNumber field.
func (o *ChangeRequestRef) SetLatestRevisionNumber(v int64) {
	o.LatestRevisionNumber = &v
}

func (o ChangeRequestRef) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChangeRequestRef) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChangeRequestId) {
		toSerialize["changeRequestId"] = o.ChangeRequestId
	}
	if !IsNil(o.LatestRevisionNumber) {
		toSerialize["latestRevisionNumber"] = o.LatestRevisionNumber
	}
	return toSerialize, nil
}

type NullableChangeRequestRef struct {
	value *ChangeRequestRef
	isSet bool
}

func (v NullableChangeRequestRef) Get() *ChangeRequestRef {
	return v.value
}

func (v *NullableChangeRequestRef) Set(val *ChangeRequestRef) {
	v.value = val
	v.isSet = true
}

func (v NullableChangeRequestRef) IsSet() bool {
	return v.isSet
}

func (v *NullableChangeRequestRef) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChangeRequestRef(val *ChangeRequestRef) *NullableChangeRequestRef {
	return &NullableChangeRequestRef{value: val, isSet: true}
}

func (v NullableChangeRequestRef) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChangeRequestRef) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


