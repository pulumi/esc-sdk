// Copyright 2024, Pulumi Corporation.  All rights reserved.
/*
ESC (Environments, Secrets, Config) API

Pulumi ESC allows you to compose and manage hierarchical collections of configuration and secrets and consume them in various ways.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esc_sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CloneEnvironment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloneEnvironment{}

// CloneEnvironment struct for CloneEnvironment
type CloneEnvironment struct {
	Project string `json:"project"`
	Name string `json:"name"`
	PreserveAccess *bool `json:"preserveAccess,omitempty"`
	PreserveEnvironmentTags *bool `json:"preserveEnvironmentTags,omitempty"`
	PreserveHistory *bool `json:"preserveHistory,omitempty"`
	PreserveRevisionTags *bool `json:"preserveRevisionTags,omitempty"`
}

type _CloneEnvironment CloneEnvironment

// NewCloneEnvironment instantiates a new CloneEnvironment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloneEnvironment(project string, name string) *CloneEnvironment {
	this := CloneEnvironment{}
	this.Project = project
	this.Name = name
	return &this
}

// NewCloneEnvironmentWithDefaults instantiates a new CloneEnvironment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloneEnvironmentWithDefaults() *CloneEnvironment {
	this := CloneEnvironment{}
	return &this
}

// GetProject returns the Project field value
func (o *CloneEnvironment) GetProject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Project
}

// GetProjectOk returns a tuple with the Project field value
// and a boolean to check if the value has been set.
func (o *CloneEnvironment) GetProjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Project, true
}

// SetProject sets field value
func (o *CloneEnvironment) SetProject(v string) {
	o.Project = v
}

// GetName returns the Name field value
func (o *CloneEnvironment) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CloneEnvironment) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CloneEnvironment) SetName(v string) {
	o.Name = v
}

// GetPreserveAccess returns the PreserveAccess field value if set, zero value otherwise.
func (o *CloneEnvironment) GetPreserveAccess() bool {
	if o == nil || IsNil(o.PreserveAccess) {
		var ret bool
		return ret
	}
	return *o.PreserveAccess
}

// GetPreserveAccessOk returns a tuple with the PreserveAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloneEnvironment) GetPreserveAccessOk() (*bool, bool) {
	if o == nil || IsNil(o.PreserveAccess) {
		return nil, false
	}
	return o.PreserveAccess, true
}

// HasPreserveAccess returns a boolean if a field has been set.
func (o *CloneEnvironment) HasPreserveAccess() bool {
	if o != nil && !IsNil(o.PreserveAccess) {
		return true
	}

	return false
}

// SetPreserveAccess gets a reference to the given bool and assigns it to the PreserveAccess field.
func (o *CloneEnvironment) SetPreserveAccess(v bool) {
	o.PreserveAccess = &v
}

// GetPreserveEnvironmentTags returns the PreserveEnvironmentTags field value if set, zero value otherwise.
func (o *CloneEnvironment) GetPreserveEnvironmentTags() bool {
	if o == nil || IsNil(o.PreserveEnvironmentTags) {
		var ret bool
		return ret
	}
	return *o.PreserveEnvironmentTags
}

// GetPreserveEnvironmentTagsOk returns a tuple with the PreserveEnvironmentTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloneEnvironment) GetPreserveEnvironmentTagsOk() (*bool, bool) {
	if o == nil || IsNil(o.PreserveEnvironmentTags) {
		return nil, false
	}
	return o.PreserveEnvironmentTags, true
}

// HasPreserveEnvironmentTags returns a boolean if a field has been set.
func (o *CloneEnvironment) HasPreserveEnvironmentTags() bool {
	if o != nil && !IsNil(o.PreserveEnvironmentTags) {
		return true
	}

	return false
}

// SetPreserveEnvironmentTags gets a reference to the given bool and assigns it to the PreserveEnvironmentTags field.
func (o *CloneEnvironment) SetPreserveEnvironmentTags(v bool) {
	o.PreserveEnvironmentTags = &v
}

// GetPreserveHistory returns the PreserveHistory field value if set, zero value otherwise.
func (o *CloneEnvironment) GetPreserveHistory() bool {
	if o == nil || IsNil(o.PreserveHistory) {
		var ret bool
		return ret
	}
	return *o.PreserveHistory
}

// GetPreserveHistoryOk returns a tuple with the PreserveHistory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloneEnvironment) GetPreserveHistoryOk() (*bool, bool) {
	if o == nil || IsNil(o.PreserveHistory) {
		return nil, false
	}
	return o.PreserveHistory, true
}

// HasPreserveHistory returns a boolean if a field has been set.
func (o *CloneEnvironment) HasPreserveHistory() bool {
	if o != nil && !IsNil(o.PreserveHistory) {
		return true
	}

	return false
}

// SetPreserveHistory gets a reference to the given bool and assigns it to the PreserveHistory field.
func (o *CloneEnvironment) SetPreserveHistory(v bool) {
	o.PreserveHistory = &v
}

// GetPreserveRevisionTags returns the PreserveRevisionTags field value if set, zero value otherwise.
func (o *CloneEnvironment) GetPreserveRevisionTags() bool {
	if o == nil || IsNil(o.PreserveRevisionTags) {
		var ret bool
		return ret
	}
	return *o.PreserveRevisionTags
}

// GetPreserveRevisionTagsOk returns a tuple with the PreserveRevisionTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloneEnvironment) GetPreserveRevisionTagsOk() (*bool, bool) {
	if o == nil || IsNil(o.PreserveRevisionTags) {
		return nil, false
	}
	return o.PreserveRevisionTags, true
}

// HasPreserveRevisionTags returns a boolean if a field has been set.
func (o *CloneEnvironment) HasPreserveRevisionTags() bool {
	if o != nil && !IsNil(o.PreserveRevisionTags) {
		return true
	}

	return false
}

// SetPreserveRevisionTags gets a reference to the given bool and assigns it to the PreserveRevisionTags field.
func (o *CloneEnvironment) SetPreserveRevisionTags(v bool) {
	o.PreserveRevisionTags = &v
}

func (o CloneEnvironment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloneEnvironment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["project"] = o.Project
	toSerialize["name"] = o.Name
	if !IsNil(o.PreserveAccess) {
		toSerialize["preserveAccess"] = o.PreserveAccess
	}
	if !IsNil(o.PreserveEnvironmentTags) {
		toSerialize["preserveEnvironmentTags"] = o.PreserveEnvironmentTags
	}
	if !IsNil(o.PreserveHistory) {
		toSerialize["preserveHistory"] = o.PreserveHistory
	}
	if !IsNil(o.PreserveRevisionTags) {
		toSerialize["preserveRevisionTags"] = o.PreserveRevisionTags
	}
	return toSerialize, nil
}

func (o *CloneEnvironment) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"project",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCloneEnvironment := _CloneEnvironment{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	// Allow unknown fields to be lenient with API responses that may include extra fields
	err = decoder.Decode(&varCloneEnvironment)

	if err != nil {
		return err
	}

	*o = CloneEnvironment(varCloneEnvironment)

	return err
}

type NullableCloneEnvironment struct {
	value *CloneEnvironment
	isSet bool
}

func (v NullableCloneEnvironment) Get() *CloneEnvironment {
	return v.value
}

func (v *NullableCloneEnvironment) Set(val *CloneEnvironment) {
	v.value = val
	v.isSet = true
}

func (v NullableCloneEnvironment) IsSet() bool {
	return v.isSet
}

func (v *NullableCloneEnvironment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloneEnvironment(val *CloneEnvironment) *NullableCloneEnvironment {
	return &NullableCloneEnvironment{value: val, isSet: true}
}

func (v NullableCloneEnvironment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloneEnvironment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


