// Copyright 2024, Pulumi Corporation.  All rights reserved.
/*
ESC (Environments, Secrets, Config) API

Pulumi ESC allows you to compose and manage hierarchical collections of configuration and secrets and consume them in various ways.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esc_sdk

import (
	"encoding/json"
)

// checks if the CloseChangeRequestRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloseChangeRequestRequest{}

// CloseChangeRequestRequest struct for CloseChangeRequestRequest
type CloseChangeRequestRequest struct {
	// Optional comment explaining why the change request is being closed
	Comment *string `json:"comment,omitempty"`
}

// NewCloseChangeRequestRequest instantiates a new CloseChangeRequestRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloseChangeRequestRequest() *CloseChangeRequestRequest {
	this := CloseChangeRequestRequest{}
	return &this
}

// NewCloseChangeRequestRequestWithDefaults instantiates a new CloseChangeRequestRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloseChangeRequestRequestWithDefaults() *CloseChangeRequestRequest {
	this := CloseChangeRequestRequest{}
	return &this
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *CloseChangeRequestRequest) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloseChangeRequestRequest) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *CloseChangeRequestRequest) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *CloseChangeRequestRequest) SetComment(v string) {
	o.Comment = &v
}

func (o CloseChangeRequestRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloseChangeRequestRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	return toSerialize, nil
}

type NullableCloseChangeRequestRequest struct {
	value *CloseChangeRequestRequest
	isSet bool
}

func (v NullableCloseChangeRequestRequest) Get() *CloseChangeRequestRequest {
	return v.value
}

func (v *NullableCloseChangeRequestRequest) Set(val *CloseChangeRequestRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCloseChangeRequestRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCloseChangeRequestRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloseChangeRequestRequest(val *CloseChangeRequestRequest) *NullableCloseChangeRequestRequest {
	return &NullableCloseChangeRequestRequest{value: val, isSet: true}
}

func (v NullableCloseChangeRequestRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloseChangeRequestRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


