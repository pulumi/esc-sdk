// Copyright 2024, Pulumi Corporation.  All rights reserved.
/*
ESC (Environments, Secrets, Config) API

Pulumi ESC allows you to compose and manage hierarchical collections of configuration and secrets and consume them in various ways.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esc_sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EnvironmentDraft type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvironmentDraft{}

// EnvironmentDraft struct for EnvironmentDraft
type EnvironmentDraft struct {
	// change request identifier
	ChangeRequestId string `json:"changeRequestId"`
	// latest revision number of environment
	LatestRevisionNumber int32 `json:"latestRevisionNumber"`
}

type _EnvironmentDraft EnvironmentDraft

// NewEnvironmentDraft instantiates a new EnvironmentDraft object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentDraft(changeRequestId string, latestRevisionNumber int32) *EnvironmentDraft {
	this := EnvironmentDraft{}
	this.ChangeRequestId = changeRequestId
	this.LatestRevisionNumber = latestRevisionNumber
	return &this
}

// NewEnvironmentDraftWithDefaults instantiates a new EnvironmentDraft object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentDraftWithDefaults() *EnvironmentDraft {
	this := EnvironmentDraft{}
	return &this
}

// GetChangeRequestId returns the ChangeRequestId field value
func (o *EnvironmentDraft) GetChangeRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChangeRequestId
}

// GetChangeRequestIdOk returns a tuple with the ChangeRequestId field value
// and a boolean to check if the value has been set.
func (o *EnvironmentDraft) GetChangeRequestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChangeRequestId, true
}

// SetChangeRequestId sets field value
func (o *EnvironmentDraft) SetChangeRequestId(v string) {
	o.ChangeRequestId = v
}

// GetLatestRevisionNumber returns the LatestRevisionNumber field value
func (o *EnvironmentDraft) GetLatestRevisionNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LatestRevisionNumber
}

// GetLatestRevisionNumberOk returns a tuple with the LatestRevisionNumber field value
// and a boolean to check if the value has been set.
func (o *EnvironmentDraft) GetLatestRevisionNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LatestRevisionNumber, true
}

// SetLatestRevisionNumber sets field value
func (o *EnvironmentDraft) SetLatestRevisionNumber(v int32) {
	o.LatestRevisionNumber = v
}

func (o EnvironmentDraft) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvironmentDraft) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["changeRequestId"] = o.ChangeRequestId
	toSerialize["latestRevisionNumber"] = o.LatestRevisionNumber
	return toSerialize, nil
}

func (o *EnvironmentDraft) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"changeRequestId",
		"latestRevisionNumber",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEnvironmentDraft := _EnvironmentDraft{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEnvironmentDraft)

	if err != nil {
		return err
	}

	*o = EnvironmentDraft(varEnvironmentDraft)

	return err
}

type NullableEnvironmentDraft struct {
	value *EnvironmentDraft
	isSet bool
}

func (v NullableEnvironmentDraft) Get() *EnvironmentDraft {
	return v.value
}

func (v *NullableEnvironmentDraft) Set(val *EnvironmentDraft) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentDraft) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentDraft) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentDraft(val *EnvironmentDraft) *NullableEnvironmentDraft {
	return &NullableEnvironmentDraft{value: val, isSet: true}
}

func (v NullableEnvironmentDraft) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentDraft) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


