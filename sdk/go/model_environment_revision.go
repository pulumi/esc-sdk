// Copyright 2024, Pulumi Corporation.  All rights reserved.
/*
ESC (Environments, Secrets, Config) API

Pulumi ESC allows you to compose and manage hierarchical collections of configuration and secrets and consume them in various ways.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esc_sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EnvironmentRevision type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvironmentRevision{}

// EnvironmentRevision struct for EnvironmentRevision
type EnvironmentRevision struct {
	Number int32 `json:"number"`
	CreatorLogin *string `json:"creatorLogin,omitempty"`
	Created *string `json:"created,omitempty"`
	CreatorName *string `json:"creatorName,omitempty"`
	Tags []string `json:"tags,omitempty"`
}

type _EnvironmentRevision EnvironmentRevision

// NewEnvironmentRevision instantiates a new EnvironmentRevision object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentRevision(number int32) *EnvironmentRevision {
	this := EnvironmentRevision{}
	this.Number = number
	return &this
}

// NewEnvironmentRevisionWithDefaults instantiates a new EnvironmentRevision object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentRevisionWithDefaults() *EnvironmentRevision {
	this := EnvironmentRevision{}
	return &this
}

// GetNumber returns the Number field value
func (o *EnvironmentRevision) GetNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Number
}

// GetNumberOk returns a tuple with the Number field value
// and a boolean to check if the value has been set.
func (o *EnvironmentRevision) GetNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Number, true
}

// SetNumber sets field value
func (o *EnvironmentRevision) SetNumber(v int32) {
	o.Number = v
}

// GetCreatorLogin returns the CreatorLogin field value if set, zero value otherwise.
func (o *EnvironmentRevision) GetCreatorLogin() string {
	if o == nil || IsNil(o.CreatorLogin) {
		var ret string
		return ret
	}
	return *o.CreatorLogin
}

// GetCreatorLoginOk returns a tuple with the CreatorLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentRevision) GetCreatorLoginOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorLogin) {
		return nil, false
	}
	return o.CreatorLogin, true
}

// HasCreatorLogin returns a boolean if a field has been set.
func (o *EnvironmentRevision) HasCreatorLogin() bool {
	if o != nil && !IsNil(o.CreatorLogin) {
		return true
	}

	return false
}

// SetCreatorLogin gets a reference to the given string and assigns it to the CreatorLogin field.
func (o *EnvironmentRevision) SetCreatorLogin(v string) {
	o.CreatorLogin = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *EnvironmentRevision) GetCreated() string {
	if o == nil || IsNil(o.Created) {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentRevision) GetCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *EnvironmentRevision) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *EnvironmentRevision) SetCreated(v string) {
	o.Created = &v
}

// GetCreatorName returns the CreatorName field value if set, zero value otherwise.
func (o *EnvironmentRevision) GetCreatorName() string {
	if o == nil || IsNil(o.CreatorName) {
		var ret string
		return ret
	}
	return *o.CreatorName
}

// GetCreatorNameOk returns a tuple with the CreatorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentRevision) GetCreatorNameOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorName) {
		return nil, false
	}
	return o.CreatorName, true
}

// HasCreatorName returns a boolean if a field has been set.
func (o *EnvironmentRevision) HasCreatorName() bool {
	if o != nil && !IsNil(o.CreatorName) {
		return true
	}

	return false
}

// SetCreatorName gets a reference to the given string and assigns it to the CreatorName field.
func (o *EnvironmentRevision) SetCreatorName(v string) {
	o.CreatorName = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *EnvironmentRevision) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentRevision) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *EnvironmentRevision) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *EnvironmentRevision) SetTags(v []string) {
	o.Tags = v
}

func (o EnvironmentRevision) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvironmentRevision) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["number"] = o.Number
	if !IsNil(o.CreatorLogin) {
		toSerialize["creatorLogin"] = o.CreatorLogin
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatorName) {
		toSerialize["creatorName"] = o.CreatorName
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

func (o *EnvironmentRevision) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"number",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEnvironmentRevision := _EnvironmentRevision{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	// Allow unknown fields to be lenient with API responses that may include extra fields
	err = decoder.Decode(&varEnvironmentRevision)

	if err != nil {
		return err
	}

	*o = EnvironmentRevision(varEnvironmentRevision)

	return err
}

type NullableEnvironmentRevision struct {
	value *EnvironmentRevision
	isSet bool
}

func (v NullableEnvironmentRevision) Get() *EnvironmentRevision {
	return v.value
}

func (v *NullableEnvironmentRevision) Set(val *EnvironmentRevision) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentRevision) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentRevision) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentRevision(val *EnvironmentRevision) *NullableEnvironmentRevision {
	return &NullableEnvironmentRevision{value: val, isSet: true}
}

func (v NullableEnvironmentRevision) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentRevision) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


