// Copyright 2024, Pulumi Corporation.  All rights reserved.
/*
ESC (Environments, Secrets, Config) API

Pulumi ESC allows you to compose and manage hierarchical collections of configuration and secrets and consume them in various ways.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esc_sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EnvironmentRevisionTag type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvironmentRevisionTag{}

// EnvironmentRevisionTag struct for EnvironmentRevisionTag
type EnvironmentRevisionTag struct {
	Revision int32 `json:"revision"`
	Name string `json:"name"`
	Created *string `json:"created,omitempty"`
	Modified *string `json:"modified,omitempty"`
	EditorLogin *string `json:"editorLogin,omitempty"`
	EditorName *string `json:"editorName,omitempty"`
}

type _EnvironmentRevisionTag EnvironmentRevisionTag

// NewEnvironmentRevisionTag instantiates a new EnvironmentRevisionTag object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentRevisionTag(revision int32, name string) *EnvironmentRevisionTag {
	this := EnvironmentRevisionTag{}
	this.Revision = revision
	this.Name = name
	return &this
}

// NewEnvironmentRevisionTagWithDefaults instantiates a new EnvironmentRevisionTag object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentRevisionTagWithDefaults() *EnvironmentRevisionTag {
	this := EnvironmentRevisionTag{}
	return &this
}

// GetRevision returns the Revision field value
func (o *EnvironmentRevisionTag) GetRevision() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value
// and a boolean to check if the value has been set.
func (o *EnvironmentRevisionTag) GetRevisionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Revision, true
}

// SetRevision sets field value
func (o *EnvironmentRevisionTag) SetRevision(v int32) {
	o.Revision = v
}

// GetName returns the Name field value
func (o *EnvironmentRevisionTag) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *EnvironmentRevisionTag) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *EnvironmentRevisionTag) SetName(v string) {
	o.Name = v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *EnvironmentRevisionTag) GetCreated() string {
	if o == nil || IsNil(o.Created) {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentRevisionTag) GetCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *EnvironmentRevisionTag) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *EnvironmentRevisionTag) SetCreated(v string) {
	o.Created = &v
}

// GetModified returns the Modified field value if set, zero value otherwise.
func (o *EnvironmentRevisionTag) GetModified() string {
	if o == nil || IsNil(o.Modified) {
		var ret string
		return ret
	}
	return *o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentRevisionTag) GetModifiedOk() (*string, bool) {
	if o == nil || IsNil(o.Modified) {
		return nil, false
	}
	return o.Modified, true
}

// HasModified returns a boolean if a field has been set.
func (o *EnvironmentRevisionTag) HasModified() bool {
	if o != nil && !IsNil(o.Modified) {
		return true
	}

	return false
}

// SetModified gets a reference to the given string and assigns it to the Modified field.
func (o *EnvironmentRevisionTag) SetModified(v string) {
	o.Modified = &v
}

// GetEditorLogin returns the EditorLogin field value if set, zero value otherwise.
func (o *EnvironmentRevisionTag) GetEditorLogin() string {
	if o == nil || IsNil(o.EditorLogin) {
		var ret string
		return ret
	}
	return *o.EditorLogin
}

// GetEditorLoginOk returns a tuple with the EditorLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentRevisionTag) GetEditorLoginOk() (*string, bool) {
	if o == nil || IsNil(o.EditorLogin) {
		return nil, false
	}
	return o.EditorLogin, true
}

// HasEditorLogin returns a boolean if a field has been set.
func (o *EnvironmentRevisionTag) HasEditorLogin() bool {
	if o != nil && !IsNil(o.EditorLogin) {
		return true
	}

	return false
}

// SetEditorLogin gets a reference to the given string and assigns it to the EditorLogin field.
func (o *EnvironmentRevisionTag) SetEditorLogin(v string) {
	o.EditorLogin = &v
}

// GetEditorName returns the EditorName field value if set, zero value otherwise.
func (o *EnvironmentRevisionTag) GetEditorName() string {
	if o == nil || IsNil(o.EditorName) {
		var ret string
		return ret
	}
	return *o.EditorName
}

// GetEditorNameOk returns a tuple with the EditorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentRevisionTag) GetEditorNameOk() (*string, bool) {
	if o == nil || IsNil(o.EditorName) {
		return nil, false
	}
	return o.EditorName, true
}

// HasEditorName returns a boolean if a field has been set.
func (o *EnvironmentRevisionTag) HasEditorName() bool {
	if o != nil && !IsNil(o.EditorName) {
		return true
	}

	return false
}

// SetEditorName gets a reference to the given string and assigns it to the EditorName field.
func (o *EnvironmentRevisionTag) SetEditorName(v string) {
	o.EditorName = &v
}

func (o EnvironmentRevisionTag) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvironmentRevisionTag) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["revision"] = o.Revision
	toSerialize["name"] = o.Name
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Modified) {
		toSerialize["modified"] = o.Modified
	}
	if !IsNil(o.EditorLogin) {
		toSerialize["editorLogin"] = o.EditorLogin
	}
	if !IsNil(o.EditorName) {
		toSerialize["editorName"] = o.EditorName
	}
	return toSerialize, nil
}

func (o *EnvironmentRevisionTag) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"revision",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEnvironmentRevisionTag := _EnvironmentRevisionTag{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEnvironmentRevisionTag)

	if err != nil {
		return err
	}

	*o = EnvironmentRevisionTag(varEnvironmentRevisionTag)

	return err
}

type NullableEnvironmentRevisionTag struct {
	value *EnvironmentRevisionTag
	isSet bool
}

func (v NullableEnvironmentRevisionTag) Get() *EnvironmentRevisionTag {
	return v.value
}

func (v *NullableEnvironmentRevisionTag) Set(val *EnvironmentRevisionTag) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentRevisionTag) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentRevisionTag) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentRevisionTag(val *EnvironmentRevisionTag) *NullableEnvironmentRevisionTag {
	return &NullableEnvironmentRevisionTag{value: val, isSet: true}
}

func (v NullableEnvironmentRevisionTag) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentRevisionTag) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


