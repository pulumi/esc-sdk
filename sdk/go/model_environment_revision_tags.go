// Copyright 2024, Pulumi Corporation.  All rights reserved.
/*
ESC (Environments, Secrets, Config) API

Pulumi ESC allows you to compose and manage hierarchical collections of configuration and secrets and consume them in various ways.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esc_sdk

import (
	"encoding/json"
)

// checks if the EnvironmentRevisionTags type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvironmentRevisionTags{}

// EnvironmentRevisionTags struct for EnvironmentRevisionTags
type EnvironmentRevisionTags struct {
	Tags []EnvironmentRevisionTag `json:"tags,omitempty"`
	NextToken *string `json:"nextToken,omitempty"`
}

// NewEnvironmentRevisionTags instantiates a new EnvironmentRevisionTags object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentRevisionTags() *EnvironmentRevisionTags {
	this := EnvironmentRevisionTags{}
	return &this
}

// NewEnvironmentRevisionTagsWithDefaults instantiates a new EnvironmentRevisionTags object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentRevisionTagsWithDefaults() *EnvironmentRevisionTags {
	this := EnvironmentRevisionTags{}
	return &this
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *EnvironmentRevisionTags) GetTags() []EnvironmentRevisionTag {
	if o == nil || IsNil(o.Tags) {
		var ret []EnvironmentRevisionTag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentRevisionTags) GetTagsOk() ([]EnvironmentRevisionTag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *EnvironmentRevisionTags) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []EnvironmentRevisionTag and assigns it to the Tags field.
func (o *EnvironmentRevisionTags) SetTags(v []EnvironmentRevisionTag) {
	o.Tags = v
}

// GetNextToken returns the NextToken field value if set, zero value otherwise.
func (o *EnvironmentRevisionTags) GetNextToken() string {
	if o == nil || IsNil(o.NextToken) {
		var ret string
		return ret
	}
	return *o.NextToken
}

// GetNextTokenOk returns a tuple with the NextToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentRevisionTags) GetNextTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextToken) {
		return nil, false
	}
	return o.NextToken, true
}

// HasNextToken returns a boolean if a field has been set.
func (o *EnvironmentRevisionTags) HasNextToken() bool {
	if o != nil && !IsNil(o.NextToken) {
		return true
	}

	return false
}

// SetNextToken gets a reference to the given string and assigns it to the NextToken field.
func (o *EnvironmentRevisionTags) SetNextToken(v string) {
	o.NextToken = &v
}

func (o EnvironmentRevisionTags) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvironmentRevisionTags) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.NextToken) {
		toSerialize["nextToken"] = o.NextToken
	}
	return toSerialize, nil
}

type NullableEnvironmentRevisionTags struct {
	value *EnvironmentRevisionTags
	isSet bool
}

func (v NullableEnvironmentRevisionTags) Get() *EnvironmentRevisionTags {
	return v.value
}

func (v *NullableEnvironmentRevisionTags) Set(val *EnvironmentRevisionTags) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentRevisionTags) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentRevisionTags) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentRevisionTags(val *EnvironmentRevisionTags) *NullableEnvironmentRevisionTags {
	return &NullableEnvironmentRevisionTags{value: val, isSet: true}
}

func (v NullableEnvironmentRevisionTags) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentRevisionTags) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


