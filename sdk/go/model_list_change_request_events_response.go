// Copyright 2024, Pulumi Corporation.  All rights reserved.
/*
ESC (Environments, Secrets, Config) API

Pulumi ESC allows you to compose and manage hierarchical collections of configuration and secrets and consume them in various ways.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esc_sdk

import (
	"encoding/json"
)

// checks if the ListChangeRequestEventsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListChangeRequestEventsResponse{}

// ListChangeRequestEventsResponse struct for ListChangeRequestEventsResponse
type ListChangeRequestEventsResponse struct {
	// The list of events for this page
	Events []ChangeRequestEvent `json:"events,omitempty"`
	// Continuation token for pagination. If null, there are no more results available
	ContinuationToken *string `json:"continuationToken,omitempty"`
}

// NewListChangeRequestEventsResponse instantiates a new ListChangeRequestEventsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListChangeRequestEventsResponse() *ListChangeRequestEventsResponse {
	this := ListChangeRequestEventsResponse{}
	return &this
}

// NewListChangeRequestEventsResponseWithDefaults instantiates a new ListChangeRequestEventsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListChangeRequestEventsResponseWithDefaults() *ListChangeRequestEventsResponse {
	this := ListChangeRequestEventsResponse{}
	return &this
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *ListChangeRequestEventsResponse) GetEvents() []ChangeRequestEvent {
	if o == nil || IsNil(o.Events) {
		var ret []ChangeRequestEvent
		return ret
	}
	return o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListChangeRequestEventsResponse) GetEventsOk() ([]ChangeRequestEvent, bool) {
	if o == nil || IsNil(o.Events) {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *ListChangeRequestEventsResponse) HasEvents() bool {
	if o != nil && !IsNil(o.Events) {
		return true
	}

	return false
}

// SetEvents gets a reference to the given []ChangeRequestEvent and assigns it to the Events field.
func (o *ListChangeRequestEventsResponse) SetEvents(v []ChangeRequestEvent) {
	o.Events = v
}

// GetContinuationToken returns the ContinuationToken field value if set, zero value otherwise.
func (o *ListChangeRequestEventsResponse) GetContinuationToken() string {
	if o == nil || IsNil(o.ContinuationToken) {
		var ret string
		return ret
	}
	return *o.ContinuationToken
}

// GetContinuationTokenOk returns a tuple with the ContinuationToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListChangeRequestEventsResponse) GetContinuationTokenOk() (*string, bool) {
	if o == nil || IsNil(o.ContinuationToken) {
		return nil, false
	}
	return o.ContinuationToken, true
}

// HasContinuationToken returns a boolean if a field has been set.
func (o *ListChangeRequestEventsResponse) HasContinuationToken() bool {
	if o != nil && !IsNil(o.ContinuationToken) {
		return true
	}

	return false
}

// SetContinuationToken gets a reference to the given string and assigns it to the ContinuationToken field.
func (o *ListChangeRequestEventsResponse) SetContinuationToken(v string) {
	o.ContinuationToken = &v
}

func (o ListChangeRequestEventsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListChangeRequestEventsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Events) {
		toSerialize["events"] = o.Events
	}
	if !IsNil(o.ContinuationToken) {
		toSerialize["continuationToken"] = o.ContinuationToken
	}
	return toSerialize, nil
}

type NullableListChangeRequestEventsResponse struct {
	value *ListChangeRequestEventsResponse
	isSet bool
}

func (v NullableListChangeRequestEventsResponse) Get() *ListChangeRequestEventsResponse {
	return v.value
}

func (v *NullableListChangeRequestEventsResponse) Set(val *ListChangeRequestEventsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListChangeRequestEventsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListChangeRequestEventsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListChangeRequestEventsResponse(val *ListChangeRequestEventsResponse) *NullableListChangeRequestEventsResponse {
	return &NullableListChangeRequestEventsResponse{value: val, isSet: true}
}

func (v NullableListChangeRequestEventsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListChangeRequestEventsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


