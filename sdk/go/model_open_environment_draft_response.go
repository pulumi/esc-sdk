// Copyright 2024, Pulumi Corporation.  All rights reserved.
/*
ESC (Environments, Secrets, Config) API

Pulumi ESC allows you to compose and manage hierarchical collections of configuration and secrets and consume them in various ways.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esc_sdk

import (
	"encoding/json"
	"time"
)

// checks if the OpenEnvironmentDraftResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenEnvironmentDraftResponse{}

// OpenEnvironmentDraftResponse struct for OpenEnvironmentDraftResponse
type OpenEnvironmentDraftResponse struct {
	// The open environment session ID
	Id *string `json:"id,omitempty"`
	// When this open session expires
	Expires *time.Time `json:"expires,omitempty"`
}

// NewOpenEnvironmentDraftResponse instantiates a new OpenEnvironmentDraftResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenEnvironmentDraftResponse() *OpenEnvironmentDraftResponse {
	this := OpenEnvironmentDraftResponse{}
	return &this
}

// NewOpenEnvironmentDraftResponseWithDefaults instantiates a new OpenEnvironmentDraftResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenEnvironmentDraftResponseWithDefaults() *OpenEnvironmentDraftResponse {
	this := OpenEnvironmentDraftResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OpenEnvironmentDraftResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenEnvironmentDraftResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OpenEnvironmentDraftResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OpenEnvironmentDraftResponse) SetId(v string) {
	o.Id = &v
}

// GetExpires returns the Expires field value if set, zero value otherwise.
func (o *OpenEnvironmentDraftResponse) GetExpires() time.Time {
	if o == nil || IsNil(o.Expires) {
		var ret time.Time
		return ret
	}
	return *o.Expires
}

// GetExpiresOk returns a tuple with the Expires field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenEnvironmentDraftResponse) GetExpiresOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Expires) {
		return nil, false
	}
	return o.Expires, true
}

// HasExpires returns a boolean if a field has been set.
func (o *OpenEnvironmentDraftResponse) HasExpires() bool {
	if o != nil && !IsNil(o.Expires) {
		return true
	}

	return false
}

// SetExpires gets a reference to the given time.Time and assigns it to the Expires field.
func (o *OpenEnvironmentDraftResponse) SetExpires(v time.Time) {
	o.Expires = &v
}

func (o OpenEnvironmentDraftResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenEnvironmentDraftResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Expires) {
		toSerialize["expires"] = o.Expires
	}
	return toSerialize, nil
}

type NullableOpenEnvironmentDraftResponse struct {
	value *OpenEnvironmentDraftResponse
	isSet bool
}

func (v NullableOpenEnvironmentDraftResponse) Get() *OpenEnvironmentDraftResponse {
	return v.value
}

func (v *NullableOpenEnvironmentDraftResponse) Set(val *OpenEnvironmentDraftResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenEnvironmentDraftResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenEnvironmentDraftResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenEnvironmentDraftResponse(val *OpenEnvironmentDraftResponse) *NullableOpenEnvironmentDraftResponse {
	return &NullableOpenEnvironmentDraftResponse{value: val, isSet: true}
}

func (v NullableOpenEnvironmentDraftResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenEnvironmentDraftResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


