// Copyright 2024, Pulumi Corporation.  All rights reserved.
/*
ESC (Environments, Secrets, Config) API

Pulumi ESC allows you to compose and manage hierarchical collections of configuration and secrets and consume them in various ways.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esc_sdk

import (
	"encoding/json"
)

// checks if the TargetEntityEnvironment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TargetEntityEnvironment{}

// TargetEntityEnvironment struct for TargetEntityEnvironment
type TargetEntityEnvironment struct {
	TargetEntity
	// The project name
	Project *string `json:"project,omitempty"`
	// The environment name
	Name *string `json:"name,omitempty"`
}

// NewTargetEntityEnvironment instantiates a new TargetEntityEnvironment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTargetEntityEnvironment() *TargetEntityEnvironment {
	this := TargetEntityEnvironment{}
	return &this
}

// NewTargetEntityEnvironmentWithDefaults instantiates a new TargetEntityEnvironment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTargetEntityEnvironmentWithDefaults() *TargetEntityEnvironment {
	this := TargetEntityEnvironment{}
	return &this
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *TargetEntityEnvironment) GetProject() string {
	if o == nil || IsNil(o.Project) {
		var ret string
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetEntityEnvironment) GetProjectOk() (*string, bool) {
	if o == nil || IsNil(o.Project) {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *TargetEntityEnvironment) HasProject() bool {
	if o != nil && !IsNil(o.Project) {
		return true
	}

	return false
}

// SetProject gets a reference to the given string and assigns it to the Project field.
func (o *TargetEntityEnvironment) SetProject(v string) {
	o.Project = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TargetEntityEnvironment) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetEntityEnvironment) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TargetEntityEnvironment) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TargetEntityEnvironment) SetName(v string) {
	o.Name = &v
}

func (o TargetEntityEnvironment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TargetEntityEnvironment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedTargetEntity, errTargetEntity := json.Marshal(o.TargetEntity)
	if errTargetEntity != nil {
		return map[string]interface{}{}, errTargetEntity
	}
	errTargetEntity = json.Unmarshal([]byte(serializedTargetEntity), &toSerialize)
	if errTargetEntity != nil {
		return map[string]interface{}{}, errTargetEntity
	}
	if !IsNil(o.Project) {
		toSerialize["project"] = o.Project
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableTargetEntityEnvironment struct {
	value *TargetEntityEnvironment
	isSet bool
}

func (v NullableTargetEntityEnvironment) Get() *TargetEntityEnvironment {
	return v.value
}

func (v *NullableTargetEntityEnvironment) Set(val *TargetEntityEnvironment) {
	v.value = val
	v.isSet = true
}

func (v NullableTargetEntityEnvironment) IsSet() bool {
	return v.isSet
}

func (v *NullableTargetEntityEnvironment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTargetEntityEnvironment(val *TargetEntityEnvironment) *NullableTargetEntityEnvironment {
	return &NullableTargetEntityEnvironment{value: val, isSet: true}
}

func (v NullableTargetEntityEnvironment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTargetEntityEnvironment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


