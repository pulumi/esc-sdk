// Copyright 2024, Pulumi Corporation.  All rights reserved.
/*
ESC (Environments, Secrets, Config) API

Pulumi ESC allows you to compose and manage hierarchical collections of configuration and secrets and consume them in various ways.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esc_sdk

import (
	"encoding/json"
)

// checks if the UnapproveChangeRequestRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnapproveChangeRequestRequest{}

// UnapproveChangeRequestRequest struct for UnapproveChangeRequestRequest
type UnapproveChangeRequestRequest struct {
	// Optional note clarifying the reason for revoking approval
	Comment *string `json:"comment,omitempty"`
}

// NewUnapproveChangeRequestRequest instantiates a new UnapproveChangeRequestRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnapproveChangeRequestRequest() *UnapproveChangeRequestRequest {
	this := UnapproveChangeRequestRequest{}
	return &this
}

// NewUnapproveChangeRequestRequestWithDefaults instantiates a new UnapproveChangeRequestRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnapproveChangeRequestRequestWithDefaults() *UnapproveChangeRequestRequest {
	this := UnapproveChangeRequestRequest{}
	return &this
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *UnapproveChangeRequestRequest) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnapproveChangeRequestRequest) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *UnapproveChangeRequestRequest) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *UnapproveChangeRequestRequest) SetComment(v string) {
	o.Comment = &v
}

func (o UnapproveChangeRequestRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnapproveChangeRequestRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	return toSerialize, nil
}

type NullableUnapproveChangeRequestRequest struct {
	value *UnapproveChangeRequestRequest
	isSet bool
}

func (v NullableUnapproveChangeRequestRequest) Get() *UnapproveChangeRequestRequest {
	return v.value
}

func (v *NullableUnapproveChangeRequestRequest) Set(val *UnapproveChangeRequestRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUnapproveChangeRequestRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUnapproveChangeRequestRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnapproveChangeRequestRequest(val *UnapproveChangeRequestRequest) *NullableUnapproveChangeRequestRequest {
	return &NullableUnapproveChangeRequestRequest{value: val, isSet: true}
}

func (v NullableUnapproveChangeRequestRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnapproveChangeRequestRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


