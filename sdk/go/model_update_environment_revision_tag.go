// Copyright 2024, Pulumi Corporation.  All rights reserved.
/*
ESC (Environments, Secrets, Config) API

Pulumi ESC allows you to compose and manage hierarchical collections of configuration and secrets and consume them in various ways.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esc_sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateEnvironmentRevisionTag type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateEnvironmentRevisionTag{}

// UpdateEnvironmentRevisionTag struct for UpdateEnvironmentRevisionTag
type UpdateEnvironmentRevisionTag struct {
	Revision int32 `json:"revision"`
}

type _UpdateEnvironmentRevisionTag UpdateEnvironmentRevisionTag

// NewUpdateEnvironmentRevisionTag instantiates a new UpdateEnvironmentRevisionTag object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateEnvironmentRevisionTag(revision int32) *UpdateEnvironmentRevisionTag {
	this := UpdateEnvironmentRevisionTag{}
	this.Revision = revision
	return &this
}

// NewUpdateEnvironmentRevisionTagWithDefaults instantiates a new UpdateEnvironmentRevisionTag object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateEnvironmentRevisionTagWithDefaults() *UpdateEnvironmentRevisionTag {
	this := UpdateEnvironmentRevisionTag{}
	return &this
}

// GetRevision returns the Revision field value
func (o *UpdateEnvironmentRevisionTag) GetRevision() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value
// and a boolean to check if the value has been set.
func (o *UpdateEnvironmentRevisionTag) GetRevisionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Revision, true
}

// SetRevision sets field value
func (o *UpdateEnvironmentRevisionTag) SetRevision(v int32) {
	o.Revision = v
}

func (o UpdateEnvironmentRevisionTag) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateEnvironmentRevisionTag) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["revision"] = o.Revision
	return toSerialize, nil
}

func (o *UpdateEnvironmentRevisionTag) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"revision",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateEnvironmentRevisionTag := _UpdateEnvironmentRevisionTag{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateEnvironmentRevisionTag)

	if err != nil {
		return err
	}

	*o = UpdateEnvironmentRevisionTag(varUpdateEnvironmentRevisionTag)

	return err
}

type NullableUpdateEnvironmentRevisionTag struct {
	value *UpdateEnvironmentRevisionTag
	isSet bool
}

func (v NullableUpdateEnvironmentRevisionTag) Get() *UpdateEnvironmentRevisionTag {
	return v.value
}

func (v *NullableUpdateEnvironmentRevisionTag) Set(val *UpdateEnvironmentRevisionTag) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateEnvironmentRevisionTag) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateEnvironmentRevisionTag) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateEnvironmentRevisionTag(val *UpdateEnvironmentRevisionTag) *NullableUpdateEnvironmentRevisionTag {
	return &NullableUpdateEnvironmentRevisionTag{value: val, isSet: true}
}

func (v NullableUpdateEnvironmentRevisionTag) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateEnvironmentRevisionTag) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


